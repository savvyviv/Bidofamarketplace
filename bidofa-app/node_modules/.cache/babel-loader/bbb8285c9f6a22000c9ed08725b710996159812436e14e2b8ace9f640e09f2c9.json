{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction Connect() {\n  _s();\n  let [account, setAccount] = useState(\"\");\n  let [isConnected, setIsConnected] = useState(false);\n  const {\n    ethereum\n  } = window;\n  const connectMetamask = async () => {\n    if (window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      } catch (error) {\n        console.error(\"Error connecting Metamask:\", error);\n      }\n    } else {\n      console.warn(\"Metamask not available\", warn);\n    }\n  };\n  const disconnectMetamask = () => {\n    setAccount(\"\");\n    setIsConnected(false);\n  };\n}\n_s(Connect, \"i61HUDnYnseqxF2gkOas2oQbg8g=\");\n_c = Connect;\nexport default Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["useState","Connect","_s","account","setAccount","isConnected","setIsConnected","ethereum","window","connectMetamask","accounts","request","method","error","console","warn","disconnectMetamask","_c","$RefreshReg$"],"sources":["/home/savvyviv/Github/Bidofa/bidofa-app/src/components/Connect.js"],"sourcesContent":["import  { useState } from 'react';\n\nfunction Connect(){\nlet [account, setAccount] = useState(\"\");\nlet[isConnected, setIsConnected] = useState(false);\n\n\n\n\nconst{ ethereum } = window;\nconst connectMetamask = async () => {\nif (window.ethereum !== \"undefined\") {\n    try {\n    const accounts = await ethereum.request({method: \"eth_requestAccounts\"});\n    setAccount(accounts[0]);\n    setIsConnected(true);\n    }\n    catch (error) {\n        console.error(\"Error connecting Metamask:\", error);\n    }\n}\n    else {\n        console.warn(\"Metamask not available\", warn); \n    }\n}\n\n\n\nconst disconnectMetamask  = () => {\nsetAccount(\"\")\nsetIsConnected(false);\n \n\n\n}\n}\n\nexport default Connect;"],"mappings":";AAAA,SAAUA,QAAQ,QAAQ,OAAO;AAEjC,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAClB,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAG,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAKlD,MAAK;IAAEO;EAAS,CAAC,GAAGC,MAAM;EAC1B,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAID,MAAM,CAACD,QAAQ,KAAK,WAAW,EAAE;MACjC,IAAI;QACJ,MAAMG,QAAQ,GAAG,MAAMH,QAAQ,CAACI,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QACxER,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvBJ,cAAc,CAAC,IAAI,CAAC;MACpB,CAAC,CACD,OAAOO,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC,MACQ;MACDC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEA,IAAI,CAAC;IAChD;EACJ,CAAC;EAID,MAAMC,kBAAkB,GAAIA,CAAA,KAAM;IAClCZ,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,KAAK,CAAC;EAIrB,CAAC;AACD;AAACJ,EAAA,CAjCQD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}